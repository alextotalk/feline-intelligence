basePath: /
definitions:
  model.Cat:
    properties:
      breed:
        example: Siamese
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Whiskers
        type: string
      salary:
        example: 1000
        type: number
      years_of_experience:
        example: 5
        type: integer
    type: object
  model.Mission:
    properties:
      cat_id:
        example: 1
        type: integer
      completed:
        example: false
        type: boolean
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      targets:
        items:
          $ref: '#/definitions/model.Target'
        type: array
    type: object
  model.Target:
    properties:
      complete:
        example: false
        type: boolean
      country:
        example: Meowland
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      mission_id:
        example: 1
        type: integer
      name:
        example: Target Alpha
        type: string
      notes:
        example: Highly guarded
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управління шпигунськими котами, місіями та цілями.
  title: Feline Intelligence API
  version: "1.0"
paths:
  /cats:
    get:
      consumes:
      - application/json
      description: Gets a list of all spy cats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Cat'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List of cats
      tags:
      - cats
    post:
      consumes:
      - application/json
      description: Creates a new spy cat with data provided
      parameters:
      - description: Cat data
        in: body
        name: cat
        required: true
        schema:
          $ref: '#/definitions/model.Cat'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Cat'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a cat
      tags:
      - cats
  /cats/{id}:
    delete:
      consumes:
      - application/json
      description: Removes the cat by its unique ID
      parameters:
      - description: ID cat
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove the cat
      tags:
      - cats
    get:
      consumes:
      - application/json
      description: Receives cat details by its unique ID
      parameters:
      - description: ID cat
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Cat'
        "404":
          description: Cat is not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a cat for ID
      tags:
      - cats
  /cats/{id}/salary:
    put:
      consumes:
      - application/json
      description: Updates a cat's salary for his ID
      parameters:
      - description: ID кота
        in: path
        name: id
        required: true
        type: integer
      - description: New salary
        in: body
        name: salary
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a cat's salary
      tags:
      - cats
  /missions:
    get:
      consumes:
      - application/json
      description: Gets a list of all missions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Mission'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List of missions
      tags:
      - missions
    post:
      consumes:
      - application/json
      description: Creates a new mission with the data provided
      parameters:
      - description: Mission data
        in: body
        name: mission
        required: true
        schema:
          $ref: '#/definitions/model.Mission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Mission'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a mission
      tags:
      - missions
  /missions/{id}:
    delete:
      consumes:
      - application/json
      description: Removes the mission for her ID
      parameters:
      - description: ID mission
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "409":
          description: Conflict ( mission assigned a cat)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove the mission
      tags:
      - missions
    get:
      consumes:
      - application/json
      description: Receives mission details by its unique identifier
      parameters:
      - description: ID mission
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Mission'
        "404":
          description: Mission not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a mission for ID
      tags:
      - missions
  /missions/{id}/assign/{catID}:
    post:
      consumes:
      - application/json
      description: Appoints a cat to a particular mission
      parameters:
      - description: ID mission
        in: path
        name: id
        required: true
        type: integer
      - description: ID cat
        in: path
        name: catID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "409":
          description: Conflict ( cat already has an active mission)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: To assign a cat to a mission
      tags:
      - missions
  /missions/{id}/complete:
    put:
      consumes:
      - application/json
      description: Denotes the mission as completed
      parameters:
      - description: ID місії
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Complete the mission
      tags:
      - missions
  /missions/{id}/targets:
    post:
      consumes:
      - application/json
      description: Adds a new target to a particular mission
      parameters:
      - description: ID mission
        in: path
        name: id
        required: true
        type: integer
      - description: Дані цілі
        in: body
        name: target
        required: true
        schema:
          $ref: '#/definitions/model.Target'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Target'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict (mission is completed or has a maximum of purposes)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add the target to the mission
      tags:
      - targets
  /targets/{targetID}:
    delete:
      consumes:
      - application/json
      description: Removes the target for her ID
      parameters:
      - description: ID targets
        in: path
        name: targetID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "409":
          description: Conflict (eg target completed or mission has only one target)
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove the target
      tags:
      - targets
  /targets/{targetID}/complete:
    put:
      consumes:
      - application/json
      description: Denotes the target as completed
      parameters:
      - description: ID targets
        in: path
        name: targetID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Complete the target
      tags:
      - targets
  /targets/{targetID}/notes:
    put:
      consumes:
      - application/json
      description: Updates notes for a particular purpose
      parameters:
      - description: ID targets
        in: path
        name: targetID
        required: true
        type: integer
      - description: New notes
        in: body
        name: notes
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update goals notes
      tags:
      - targets
swagger: "2.0"
